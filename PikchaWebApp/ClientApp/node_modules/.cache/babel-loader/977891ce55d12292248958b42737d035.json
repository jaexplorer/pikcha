{"ast":null,"code":"import _defineProperty from \"/Users/AndrewSabato/Desktop/Pikcha/Repo/PikchaWebApp/ClientApp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const customDropdownCSS = {\n  container: (base, state) => _objectSpread({}, base, {\n    padding: \"1rem\",\n    paddingLeft: \"2rem\",\n    paddingRight: \"2rem\"\n  }),\n  control: (base, state) => _objectSpread({}, base, {\n    // width: \"10rem\",\n    height: \"4rem\",\n    background: \"#1a1a1a\",\n    borderRadius: state.isFocused ? \"0\" : \"0\",\n    borderColor: state.isFocused ? \"none\" : \"none\",\n    boxShadow: state.isFocused ? null : null,\n    \"&:hover\": {\n      borderColor: state.isFocused ? \"none\" : \"none\"\n    },\n    cursor: \"pointer\"\n  }),\n  placeholder: base => _objectSpread({}, base, {\n    color: \"white\",\n    fontSize: \"1.2rem\",\n    textTransform: \"uppercase\",\n    paddingLeft: \"1rem\"\n  }),\n  indicatorSeparator: base => _objectSpread({}, base, {\n    display: \"none\"\n  }),\n  dropdownIndicator: (base, state) => _objectSpread({}, base, {\n    marginRight: \"0.8rem\",\n    transform: state.isFocused ? \"rotate(180deg)\" : \"rotate(0deg)\"\n  }),\n  menu: base => _objectSpread({}, base, {\n    borderRadius: 0,\n    marginTop: 0,\n    textAlign: \"left\",\n    wordWrap: \"break-word\"\n  }),\n  menuList: base => _objectSpread({}, base, {\n    padding: 0\n  }),\n  option: (base, state) => _objectSpread({}, base, {\n    background: \"#1a1a1a\",\n    color: state.isFocused ? \"mediumPurple\" : \"white\",\n    fontSize: \"1.2rem\",\n    textTransform: \"uppercase\",\n    padding: \"1rem\",\n    cursor: \"pointer\",\n    paddingLeft: \"1.5rem\"\n  }),\n  singleValue: (base, state) => _objectSpread({}, base, {\n    color: \"white\",\n    fontSize: \"1.2rem\",\n    textTransform: \"uppercase\",\n    paddingLeft: \"1rem\"\n  })\n};","map":{"version":3,"sources":["/Users/AndrewSabato/Desktop/Pikcha/Repo/PikchaWebApp/ClientApp/src/components/layout/CustomDropdownCSS.js"],"names":["customDropdownCSS","container","base","state","padding","paddingLeft","paddingRight","control","height","background","borderRadius","isFocused","borderColor","boxShadow","cursor","placeholder","color","fontSize","textTransform","indicatorSeparator","display","dropdownIndicator","marginRight","transform","menu","marginTop","textAlign","wordWrap","menuList","option","singleValue"],"mappings":";;;;;;AAAA,OAAO,MAAMA,iBAAiB,GAAG;AAC/BC,EAAAA,SAAS,EAAE,CAACC,IAAD,EAAOC,KAAP,uBACND,IADM;AAETE,IAAAA,OAAO,EAAE,MAFA;AAGTC,IAAAA,WAAW,EAAE,MAHJ;AAITC,IAAAA,YAAY,EAAE;AAJL,IADoB;AAO/BC,EAAAA,OAAO,EAAE,CAACL,IAAD,EAAOC,KAAP,uBACJD,IADI;AAEP;AACAM,IAAAA,MAAM,EAAE,MAHD;AAIPC,IAAAA,UAAU,EAAE,SAJL;AAKPC,IAAAA,YAAY,EAAEP,KAAK,CAACQ,SAAN,GAAkB,GAAlB,GAAwB,GAL/B;AAMPC,IAAAA,WAAW,EAAET,KAAK,CAACQ,SAAN,GAAkB,MAAlB,GAA2B,MANjC;AAOPE,IAAAA,SAAS,EAAEV,KAAK,CAACQ,SAAN,GAAkB,IAAlB,GAAyB,IAP7B;AAQP,eAAW;AACTC,MAAAA,WAAW,EAAET,KAAK,CAACQ,SAAN,GAAkB,MAAlB,GAA2B;AAD/B,KARJ;AAWPG,IAAAA,MAAM,EAAE;AAXD,IAPsB;AAoB/BC,EAAAA,WAAW,EAAEb,IAAI,sBACZA,IADY;AAEfc,IAAAA,KAAK,EAAE,OAFQ;AAGfC,IAAAA,QAAQ,EAAE,QAHK;AAIfC,IAAAA,aAAa,EAAE,WAJA;AAKfb,IAAAA,WAAW,EAAE;AALE,IApBc;AA2B/Bc,EAAAA,kBAAkB,EAAEjB,IAAI,sBACnBA,IADmB;AAEtBkB,IAAAA,OAAO,EAAE;AAFa,IA3BO;AA+B/BC,EAAAA,iBAAiB,EAAE,CAACnB,IAAD,EAAOC,KAAP,uBACdD,IADc;AAEjBoB,IAAAA,WAAW,EAAE,QAFI;AAGjBC,IAAAA,SAAS,EAAEpB,KAAK,CAACQ,SAAN,GAAkB,gBAAlB,GAAqC;AAH/B,IA/BY;AAqC/Ba,EAAAA,IAAI,EAAEtB,IAAI,sBACLA,IADK;AAERQ,IAAAA,YAAY,EAAE,CAFN;AAGRe,IAAAA,SAAS,EAAE,CAHH;AAIRC,IAAAA,SAAS,EAAE,MAJH;AAKRC,IAAAA,QAAQ,EAAE;AALF,IArCqB;AA4C/BC,EAAAA,QAAQ,EAAE1B,IAAI,sBACTA,IADS;AAEZE,IAAAA,OAAO,EAAE;AAFG,IA5CiB;AAgD/ByB,EAAAA,MAAM,EAAE,CAAC3B,IAAD,EAAOC,KAAP,uBACHD,IADG;AAENO,IAAAA,UAAU,EAAE,SAFN;AAGNO,IAAAA,KAAK,EAAEb,KAAK,CAACQ,SAAN,GAAkB,cAAlB,GAAmC,OAHpC;AAINM,IAAAA,QAAQ,EAAE,QAJJ;AAKNC,IAAAA,aAAa,EAAE,WALT;AAMNd,IAAAA,OAAO,EAAE,MANH;AAONU,IAAAA,MAAM,EAAE,SAPF;AAQNT,IAAAA,WAAW,EAAE;AARP,IAhDuB;AA0D/ByB,EAAAA,WAAW,EAAE,CAAC5B,IAAD,EAAOC,KAAP,uBACRD,IADQ;AAEXc,IAAAA,KAAK,EAAE,OAFI;AAGXC,IAAAA,QAAQ,EAAE,QAHC;AAIXC,IAAAA,aAAa,EAAE,WAJJ;AAKXb,IAAAA,WAAW,EAAE;AALF;AA1DkB,CAA1B","sourcesContent":["export const customDropdownCSS = {\n  container: (base, state) => ({\n    ...base,\n    padding: \"1rem\",\n    paddingLeft: \"2rem\",\n    paddingRight: \"2rem\"\n  }),\n  control: (base, state) => ({\n    ...base,\n    // width: \"10rem\",\n    height: \"4rem\",\n    background: \"#1a1a1a\",\n    borderRadius: state.isFocused ? \"0\" : \"0\",\n    borderColor: state.isFocused ? \"none\" : \"none\",\n    boxShadow: state.isFocused ? null : null,\n    \"&:hover\": {\n      borderColor: state.isFocused ? \"none\" : \"none\"\n    },\n    cursor: \"pointer\"\n  }),\n  placeholder: base => ({\n    ...base,\n    color: \"white\",\n    fontSize: \"1.2rem\",\n    textTransform: \"uppercase\",\n    paddingLeft: \"1rem\"\n  }),\n  indicatorSeparator: base => ({\n    ...base,\n    display: \"none\"\n  }),\n  dropdownIndicator: (base, state) => ({\n    ...base,\n    marginRight: \"0.8rem\",\n    transform: state.isFocused ? \"rotate(180deg)\" : \"rotate(0deg)\"\n  }),\n\n  menu: base => ({\n    ...base,\n    borderRadius: 0,\n    marginTop: 0,\n    textAlign: \"left\",\n    wordWrap: \"break-word\"\n  }),\n  menuList: base => ({\n    ...base,\n    padding: 0\n  }),\n  option: (base, state) => ({\n    ...base,\n    background: \"#1a1a1a\",\n    color: state.isFocused ? \"mediumPurple\" : \"white\",\n    fontSize: \"1.2rem\",\n    textTransform: \"uppercase\",\n    padding: \"1rem\",\n    cursor: \"pointer\",\n    paddingLeft: \"1.5rem\"\n  }),\n  singleValue: (base, state) => ({\n    ...base,\n    color: \"white\",\n    fontSize: \"1.2rem\",\n    textTransform: \"uppercase\",\n    paddingLeft: \"1rem\"\n  })\n};\n"]},"metadata":{},"sourceType":"module"}