{"ast":null,"code":"import setAuthToken from \"../utils/setAuthToken\";\nimport axios from \"axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS, SET_LOADING } from \"./types\"; // LOAD USER\n\nexport const loadUser = (dispatch, getState) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  return async dispatch => {\n    try {\n      dispatch(setLoading());\n      const res = await axios.get(\"http://localhost:5000/api/auth\");\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  };\n}; // REGISTER USER\n\nexport const register = formData => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"http://localhost:5000/api/users\", formData, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.response.data.msg\n    });\n  }\n}; // LOGIN USER\n\nexport const login = formData => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"http://localhost:5000/api/auth\", formData, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data.msg\n    });\n  }\n}; // LOGOUT USER\n\nexport const logout = dispatch => dispatch({\n  type: LOGOUT\n}); // CLEAR ERRORS\n\nexport const clearErrors = dispatch => dispatch({\n  type: CLEAR_ERRORS\n}); // SET LOADING\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/AndrewSabato/Desktop/Pikcha/Repo/PikchaWebApp/ClientApp/src/actions/auth.js"],"names":["setAuthToken","axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","SET_LOADING","loadUser","dispatch","getState","localStorage","token","setLoading","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","logout","clearErrors"],"mappings":"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","sourcesContent":["import setAuthToken from \"../utils/setAuthToken\";\nimport axios from \"axios\";\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n  SET_LOADING\n} from \"./types\";\n\n// LOAD USER\nexport const loadUser = (dispatch, getState) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  return async dispatch => {\n    try {\n      dispatch(setLoading());\n      const res = await axios.get(\"http://localhost:5000/api/auth\");\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n};\n\n// REGISTER USER\nexport const register = formData => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\n      \"http://localhost:5000/api/users\",\n      formData,\n      config\n    );\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.response.data.msg\n    });\n  }\n};\n\n// LOGIN USER\nexport const login = formData => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    const res = await axios.post(\n      \"http://localhost:5000/api/auth\",\n      formData,\n      config\n    );\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data.msg\n    });\n  }\n};\n\n// LOGOUT USER\nexport const logout = dispatch => dispatch({ type: LOGOUT });\n\n// CLEAR ERRORS\nexport const clearErrors = dispatch => dispatch({ type: CLEAR_ERRORS });\n\n// SET LOADING\nexport const setLoading = () => {\n  return { type: SET_LOADING };\n};\n"]},"metadata":{},"sourceType":"module"}