{"ast":null,"code":"import setAuthToken from \"../utils/setAuthToken\";\nimport axios from \"axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, LOGGED_OUT, CLEAR_ERRORS, SET_LOADING } from \"./types\"; // LOAD USER\n\nexport const loadUser = () => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  } else {\n    return dispatch => {\n      dispatch({\n        type: LOGGED_OUT\n      });\n    };\n  }\n\n  return async dispatch => {\n    try {\n      dispatch(setLoading());\n      const res = await axios.get(\"http://localhost:5000/api/auth\");\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  };\n}; // REGISTER USER\n\nexport const register = formData => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"http://localhost:5000/api/users\", formData, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.response.data.msg\n    });\n  }\n}; // LOGIN USER\n\nexport const login = formData => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"http://localhost:5000/api/auth\", formData, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data.msg\n    });\n  }\n}; // LOGOUT USER\n\nexport const logout = () => {\n  return async dispatch => {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n}; // CLEAR ERRORS\n\nexport const clearErrors = dispatch => dispatch({\n  type: CLEAR_ERRORS\n}); // SET LOADING\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/AndrewSabato/Desktop/Pikcha/Repo/PikchaWebApp/ClientApp/src/actions/auth.js"],"names":["setAuthToken","axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","LOGGED_OUT","CLEAR_ERRORS","SET_LOADING","loadUser","localStorage","token","dispatch","type","setLoading","res","get","payload","data","err","register","formData","config","headers","post","response","msg","login","logout","clearErrors"],"mappings":"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","sourcesContent":["import setAuthToken from \"../utils/setAuthToken\";\nimport axios from \"axios\";\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  LOGGED_OUT,\n  CLEAR_ERRORS,\n  SET_LOADING\n} from \"./types\";\n\n// LOAD USER\nexport const loadUser = () => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  } else {\n    return dispatch => {\n      dispatch({ type: LOGGED_OUT });\n    };\n  }\n\n  return async dispatch => {\n    try {\n      dispatch(setLoading());\n      const res = await axios.get(\"http://localhost:5000/api/auth\");\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n};\n\n// REGISTER USER\nexport const register = formData => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\n      \"http://localhost:5000/api/users\",\n      formData,\n      config\n    );\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.response.data.msg\n    });\n  }\n};\n\n// LOGIN USER\nexport const login = formData => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    const res = await axios.post(\n      \"http://localhost:5000/api/auth\",\n      formData,\n      config\n    );\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data.msg\n    });\n  }\n};\n\n// LOGOUT USER\nexport const logout = () => {\n  return async dispatch => {\n    dispatch({ type: LOGOUT });\n  };\n};\n\n// CLEAR ERRORS\nexport const clearErrors = dispatch => dispatch({ type: CLEAR_ERRORS });\n\n// SET LOADING\nexport const setLoading = () => {\n  return { type: SET_LOADING };\n};\n"]},"metadata":{},"sourceType":"module"}